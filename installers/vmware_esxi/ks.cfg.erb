<%
  require 'yaml'
  require 'erb'
  localdir = File.dirname(__FILE__)
  node_options_file = File.join(localdir, "#{node.hostname}.yaml" )
  if File.exists?(node_options_file)
    options = YAML.load_file(
      node_options_file
    )
  else
    options = {}
  end
%>
# Thanks to William Lam for being the guru
accepteula
rootpw --iscrypted <%=
  if node.root_password =~ /^\$\d+\$[^$]*\$/
    node.root_password
  else
    require 'asm/cipher'
    require 'unix_crypt'
    asm_decrypted_password = ASM::Cipher.decrypt_string(node.root_password)
    # @todo danielp 2013-11-07: if ESXi supports a stronger algorithm, we
    # should probably upgrade to using it in preference to MD5.  SHA512 is
    # current state-of-the-art practice, elsewhere.
    UnixCrypt::MD5.build(asm_decrypted_password)
  end
%>
clearpart --firstdisk --overwritevmfs
install --firstdisk --overwritevmfs
# Set the network to DHCP on the first network adapater
# @todo danielp 2013-10-11: this needs to support static mode too...
<%=
mgmt_network = options['hypervisor_network'] && options['hypervisor_network'].first
static = mgmt_network && mgmt_network['staticNetworkConfiguration']

if !static
  'network --bootproto=dhcp --device=vmnic0'
else
  content = "network --bootproto=static --device=vmnic0 --ip=#{static['ip_address']}  --netmask=#{static['subnet']} --gateway=#{static['gateway']} --hostname=\"#{node.hostname}\""
  # NOTE: vlanId is a FixNum
  if mgmt_network['vlanId']
    content += " --vlanid=#{mgmt_network['vlanId']}"
  end
  nameservers = [ static['dns1'], static['dns2'] ].select { |x| !x.nil? && !x.empty? }
  if nameservers.size > 0
    content += " --nameserver=#{nameservers.join(',')}"
  else
    content += ' --nodns'
  end
  content
end
%>

reboot

# %include /tmp/networkconfig
%pre --interpreter=busybox
wget <%= stage_done_url("kickstart") %>

# echo 'network --bootproto=static --addvmportgroup=false --device=vmnic0 --ip=<%= @node_ip_address %> --netmask=<%= @ip_range_subnet %> --gateway=<%= @gateway %> --nameserver=<%= @nameserver %> --hostname=<%= @node_hostname %>' > /tmp/networkconfig



%firstboot --interpreter=busybox

# wget <%= @api_svc_uri %>/policy/callback/<%= @policy_uuid %>/postinstall/end
# enable HV (Hardware Virtualization to run nested 64bit Guests + Hyper-V VM)
grep -i 'vhv.allow' /etc/vmware/config || echo 'vhv.allow = 'TRUE'' >> /etc/vmware/config
vim-cmd hostsvc/enable_ssh
vim-cmd hostsvc/start_ssh

# enable & start ESXi Shell (TSM)
vim-cmd hostsvc/enable_esx_shell
vim-cmd hostsvc/start_esx_shell

esxcli system settings advanced set -o /UserVars/SuppressShellWarning -i 1
esxcli system hostname set --fqdn <%= node.hostname %>

# rename local datastore to something more meaningful
vim-cmd hostsvc/datastore/rename datastore1 "$(hostname -s)-local-storage-1"

# assign license
# vim-cmd vimsvc/license --set <%= @esx_license %>


# change the individual syslog rotation count
esxcli system syslog config logger set --id=hostd --rotate=20 --size=2048
esxcli system syslog config logger set --id=vmkernel --rotate=20 --size=2048
esxcli system syslog config logger set --id=fdm --rotate=20
esxcli system syslog config logger set --id=vpxa --rotate=20

### NTP CONFIGURATIONS ###
# cat > /etc/ntp.conf << __NTP_CONFIG__
# restrict default kod nomodify notrap noquerynopeer
# restrict 127.0.0.1
# server <%= @ntpserver %>
# __NTP_CONFIG__
# /sbin/chkconfig --level 345 ntpd on

<% if static %>
# Remove original management network
esxcli network ip interface remove --interface-name vmk0
esxcli network vswitch standard portgroup remove --portgroup-name "Management Network" --vswitch-name vSwitch0

# Configure management network
esxcli network vswitch standard portgroup add --portgroup-name "<%= mgmt_network['name'] %>" --vswitch-name vSwitch0
<% if mgmt_network['vlanId'] %>
esxcli network vswitch standard portgroup set --portgroup-name  "<%= mgmt_network['name'] %>" --vlan-id <%= mgmt_network['vlanId'] %>
<% end %>
esxcli network ip interface add --interface-name vmk0 --portgroup-name "<%= mgmt_network['name'] %>"
esxcli network ip interface ipv4 set --interface-name vmk0 --type static --ipv4 <%= static['ip_address'] %> --netmask <%= static['subnet'] %>
<% end %>

### FIREWALL CONFIGURATION ###

# enable firewall
esxcli network firewall set --default-action false --enabled yes

# services to enable by default
FIREWALL_SERVICES='syslog sshClient ntpClient updateManager httpClient netdump'
for SERVICE in ${FIREWALL_SERVICES}; do
    esxcli network firewall ruleset set --ruleset-id ${SERVICE} --enabled yes
done

# backup ESXi configuration to persist changes
/sbin/auto-backup.sh

# enter maintenance mode
vim-cmd hostsvc/maintenance_mode_enter

# copy %first boot script logs to persisted datastore
cp /var/log/hostd.log "/vmfs/volumes/$(hostname -s)-local-storage-1/firstboot-hostd.log"
cp /var/log/esxi_install.log "/vmfs/volumes/$(hostname -s)-local-storage-1/firstboot-esxi_install.log"
reboot
